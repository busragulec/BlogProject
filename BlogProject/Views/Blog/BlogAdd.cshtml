@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

@*<h3 class="page-title">
    <span class="page-title-icon bg-gradient-primary text-white mr-2">
        <i class="mdi mdi-format-list-bulleted menu-icon"></i>
    </span> YENİ BLOG GİRİŞİ
</h3>
<br />
<div class="card-body">
    @using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
    {

        @Html.Label("Blog Başlığı")
        @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BlogTitle)
        <br />
        @Html.Label("Blog Görseli")
        @Html.TextBoxFor(x => x.BlogImages, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BlogImages)
        <br />
        @Html.Label("Blog Görseli (Küçük)")
        @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
        <br />
        @Html.Label("Kategori")
        @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
        <br />
        @Html.Label("Blog İçeriği")
        @Html.TextAreaFor(x => x.BlogContent, 8, 3, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.BlogContent)
        <br />
        <button class="btn btn-info">Yazıyı Kaydet</button>

    }
</div>*@




@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    <div class="page-header">
        <h3 class="page-title">
            <span class="page-title-icon bg-gradient-primary text-white mr-2">

                <i class="mdi mdi-chart-bar menu-icon"></i>
            </span>YENİ BLOG GİRİŞİ
        </h3>

    </div>
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <form class="forms-sample">
                    <div class="form-group">
                        <label for="exampleInputName1">BLOG BAŞLIĞI</label>
                        @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.BlogTitle)
                    </div>
                    <div class="form-group">

                        <label for="exampleInputEmail3">BLOG GÖRSELİ</label>
                        @Html.TextBoxFor(x => x.BlogImages, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.BlogImages)
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">BLOG GÖRSELİ (Küçük)</label>
                        @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>KATEGORİ</label>
                        @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label for="exampleTextarea1">BLOG İÇERİĞİ</label>
                        @Html.TextAreaFor(x => x.BlogContent, 8, 3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.BlogContent)
                    </div>
                    <button type="submit" class="btn btn-gradient-primary mr-2">Yazıyı Kaydet</button>
                   
                </form>
            </div>
        </div>
    </div>
}
